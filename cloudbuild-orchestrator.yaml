# Cloud Build configuration for NubemGenesis Orchestrator
steps:
  # Step 1: Build LiteLLM proxy image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.litellm',
      '-t', 'gcr.io/$PROJECT_ID/litellm-proxy:latest',
      '-t', 'gcr.io/$PROJECT_ID/litellm-proxy:$SHORT_SHA',
      '.'
    ]
    id: 'build-litellm'

  # Step 2: Build main orchestrator image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.orchestrator',
      '-t', 'gcr.io/$PROJECT_ID/nubemgenesis-orchestrator:latest',
      '-t', 'gcr.io/$PROJECT_ID/nubemgenesis-orchestrator:$SHORT_SHA',
      '.'
    ]
    id: 'build-orchestrator'

  # Step 3: Push images to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/litellm-proxy']
    waitFor: ['build-litellm']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/nubemgenesis-orchestrator']
    waitFor: ['build-orchestrator']

  # Step 4: Deploy LiteLLM to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'litellm-proxy',
      '--image', 'gcr.io/$PROJECT_ID/litellm-proxy:$SHORT_SHA',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '300',
      '--max-instances', '5',
      '--set-env-vars', 'NODE_ENV=production',
      '--set-secrets', 'LITELLM_MASTER_KEY=litellm-master-key:latest',
      '--set-secrets', 'OPENAI_API_KEY=openai-api-key:latest',
      '--set-secrets', 'ANTHROPIC_API_KEY=anthropic-api-key:latest',
      '--set-secrets', 'GOOGLE_API_KEY=google-api-key:latest',
      '--set-secrets', 'MISTRAL_API_KEY=mistral-api-key:latest',
      '--set-secrets', 'TOGETHER_API_KEY=together-api-key:latest'
    ]
    id: 'deploy-litellm'

  # Step 5: Deploy orchestrator to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Get LiteLLM service URL
        LITELLM_URL=$(gcloud run services describe litellm-proxy --region=us-central1 --format='value(status.url)' || echo "http://litellm-proxy")
        echo "LiteLLM URL: ${LITELLM_URL}"
        
        # Deploy orchestrator
        gcloud run deploy nubemgenesis-orchestrator \
          --image gcr.io/$PROJECT_ID/nubemgenesis-orchestrator:$SHORT_SHA \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --memory 4Gi \
          --cpu 2 \
          --timeout 300 \
          --max-instances 10 \
          --set-env-vars "NODE_ENV=production" \
          --set-env-vars "USE_LITELLM_V2=true" \
          --set-env-vars "LITELLM_PROXY_URL=$LITELLM_URL" \
          --set-env-vars "PORT=3000" \
          --set-secrets "DATABASE_URL=database-url:latest" \
          --set-secrets "REDIS_URL=redis-url:latest" \
          --set-secrets "JWT_SECRET=jwt-secret:latest" \
          --set-secrets "FLOWISE_SECRETKEY_OVERWRITE=flowise-secret:latest" \
          --set-secrets "LANGSMITH_API_KEY=langsmith-api-key:latest" \
          --set-secrets "LANGFUSE_PUBLIC_KEY=langfuse-public-key:latest" \
          --set-secrets "LANGFUSE_SECRET_KEY=langfuse-secret-key:latest"
    waitFor: ['deploy-litellm']
    id: 'deploy-orchestrator'

  # Step 7: Set up Cloud Scheduler jobs
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe nubemgenesis-orchestrator --region=us-central1 --format='value(status.url)')
        
        # Create or update daily evaluation job
        gcloud scheduler jobs create http daily-evaluation \
          --location=us-central1 \
          --schedule="0 2 * * *" \
          --uri="$SERVICE_URL/api/v1/orchestrate/evaluate/trigger/daily-eval" \
          --http-method=POST \
          --oidc-service-account-email=nubemgenesis-orchestrator@$PROJECT_ID.iam.gserviceaccount.com \
          || gcloud scheduler jobs update http daily-evaluation \
          --location=us-central1 \
          --schedule="0 2 * * *" \
          --uri="$SERVICE_URL/api/v1/orchestrate/evaluate/trigger/daily-eval"
        
        # Create or update weekly evaluation job
        gcloud scheduler jobs create http weekly-evaluation \
          --location=us-central1 \
          --schedule="0 3 * * 0" \
          --uri="$SERVICE_URL/api/v1/orchestrate/evaluate/trigger/weekly-eval" \
          --http-method=POST \
          --oidc-service-account-email=nubemgenesis-orchestrator@$PROJECT_ID.iam.gserviceaccount.com \
          || gcloud scheduler jobs update http weekly-evaluation \
          --location=us-central1 \
          --schedule="0 3 * * 0" \
          --uri="$SERVICE_URL/api/v1/orchestrate/evaluate/trigger/weekly-eval"
    waitFor: ['deploy-orchestrator']

# Configuración de timeout y logs
timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Imágenes a construir
images:
  - 'gcr.io/$PROJECT_ID/litellm-proxy:latest'
  - 'gcr.io/$PROJECT_ID/litellm-proxy:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/nubemgenesis-orchestrator:latest'
  - 'gcr.io/$PROJECT_ID/nubemgenesis-orchestrator:$SHORT_SHA'