# Multi-stage build for security
FROM node:18-alpine AS base

# Install security updates
RUN apk update && apk upgrade && apk add --no-cache \
    dumb-init \
    && rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nubem && \
    adduser -S nubem -u 1001

FROM base AS deps
WORKDIR /app

# Copy package files
COPY package.json ./

# Install pnpm and dependencies
RUN npm install -g pnpm@8.15.0
RUN pnpm install --prod

FROM base AS builder
WORKDIR /app

# Copy source code
COPY . .
COPY --from=deps /app/node_modules ./node_modules

# Install pnpm and build
RUN npm install -g pnpm@8.15.0
RUN pnpm run build

FROM base AS production
WORKDIR /app

# Copy built application
COPY --from=builder --chown=nubem:nubem /app/dist ./dist
COPY --from=deps --chown=nubem:nubem /app/node_modules ./node_modules
COPY --from=builder --chown=nubem:nubem /app/package.json ./package.json

# Set proper permissions
RUN chmod -R 755 /app && \
    chown -R nubem:nubem /app

# Switch to non-root user
USER nubem

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "http.get('http://localhost:3000/api/v1/ping', (r) => process.exit(r.statusCode === 200 ? 0 : 1))" || exit 1

# Security labels
LABEL security.scan="enabled" \
      security.updates="auto" \
      maintainer="NubemGenesis Team"

# Expose port
EXPOSE 3000

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]